-- COMANDO PRA LIGAR O BANCO DE DADOS: mysql -u root -p 
-- Listar os TRIGGERS
-- SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA = 'eteccommerce';


-- antesInserirHistorico
DROP TRIGGER IF EXISTS antesInserirHistorico;
DELIMITER $$
CREATE TRIGGER antesInserirHistorico BEFORE INSERT ON historico FOR EACH ROW
BEGIN
	SET NEW.DTHISTORICO = CURRENT_DATE();
	SET NEW.HRHISTORICO = CURRENT_TIME();
END $$
DELIMITER ;

-- antesInserirEstado
DROP TRIGGER IF EXISTS antesInserirEstado;
DELIMITER $$
CREATE TRIGGER antesInserirEstado BEFORE INSERT ON estado FOR EACH ROW
BEGIN
	SET NEW.NOME = UPPER(NEW.NOME);
	SET NEW.SIGLA = UPPER(NEW.SIGLA);
	SET NEW.DTINSERT = CURRENT_DATE();
	SET NEW.HRINSERT = CURRENT_TIME();
END $$
DELIMITER ;

-- antesAlterarEstado
DROP TRIGGER IF EXISTS antesAlterarEstado;
DELIMITER $$
CREATE TRIGGER antesAlterarEstado BEFORE UPDATE ON estado FOR EACH ROW
BEGIN
	SET NEW.NOME = UPPER(NEW.NOME);
	SET NEW.SIGLA = UPPER(NEW.SIGLA);
	SET NEW.DTUPDATE = CURRENT_DATE();
	SET NEW.HRUPDATE = CURRENT_TIME();
END $$
DELIMITER ;


-- antesExcluirEstado
DROP TRIGGER IF EXISTS antesExcluirEstado;
DELIMITER $$
CREATE TRIGGER antesExcluirEstado BEFORE DELETE ON estado FOR EACH ROW
BEGIN

END $$
DELIMITER ;

-- depoisInserirEstado
DROP TRIGGER IF EXISTS depoisInserirEstado;
DELIMITER $$
CREATE TRIGGER depoisInserirEstado AFTER INSERT ON estado FOR EACH ROW
BEGIN
	INSERT INTO bkpestado(IDESTADO,SIGLA,NOME,CIDADES,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (NEW.IDESTADO,
			NEW.SIGLA,
			NEW.NOME,
			NEW.CIDADES,
			NEW.DTINSERT,
			NEW.HRINSERT,
			NEW.DTUPDATE,
			NEW.HRUPDATE);			
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("INSERT","estado",NEW.IDESTADO);
END $$
DELIMITER ;

-- depoisAlterarEstado
DROP TRIGGER IF EXISTS depoisAlterarEstado;
DELIMITER $$
CREATE TRIGGER depoisAlterarEstado AFTER UPDATE ON estado FOR EACH ROW
BEGIN
	INSERT INTO bkpestado(IDESTADO,SIGLA,NOME,CIDADES,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (NEW.IDESTADO,
			NEW.SIGLA,
			NEW.NOME,
			NEW.CIDADES,
			NEW.DTINSERT,
			NEW.HRINSERT,
			NEW.DTUPDATE,
			NEW.HRUPDATE);
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("UPDATE","estado",NEW.IDESTADO);			
END $$
DELIMITER ;

-- depoisExcluirEstados
DROP TRIGGER IF EXISTS depoisExcluirEstado;
DELIMITER $$
CREATE TRIGGER depoisExcluirEstado AFTER DELETE ON estado FOR EACH ROW
BEGIN
	INSERT INTO bkpestado(IDESTADO,SIGLA,NOME,CIDADES,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (OLD.IDESTADO,
			OLD.SIGLA,
			OLD.NOME,
			OLD.CIDADES,
			OLD.DTINSERT,
			OLD.HRINSERT,
			OLD.DTUPDATE,
			OLD.HRUPDATE);
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("DELETE","estado",OLD.IDESTADO);				
END $$
DELIMITER ;

-- antesInserirBkpestado
DROP TRIGGER IF EXISTS antesInserirBkpestado;
DELIMITER $$
CREATE TRIGGER antesInserirBkpestado BEFORE INSERT ON bkpestado FOR EACH ROW
BEGIN
	SET NEW.DTBKP = CURRENT_DATE();
	SET NEW.HRBKP = CURRENT_TIME();
END $$
DELIMITER ;

-- antesInserirMarca
DROP TRIGGER IF EXISTS antesInserirMarca;
DELIMITER $$
CREATE TRIGGER  antesInserirMarca BEFORE INSERT ON marca FOR EACH ROW
BEGIN
	SET NEW.NOME =  UPPER(NEW.NOME);
	SET NEW.DTINSERT = CURRENT_DATE();
	SET NEW.HRINSERT = CURRENT_TIME();

END $$
DELIMITER ;

-- antesAlterarMarca
DROP TRIGGER IF EXISTS antesAlterarMarca;
DELIMITER $$
CREATE TRIGGER  antesAlterarMarca BEFORE UPDATE ON marca FOR EACH ROW
BEGIN
	SET NEW.NOME =  UPPER(NEW.NOME);
	SET NEW.DTUPDATE = CURRENT_DATE();
	SET NEW.HRUPDATE = CURRENT_TIME();

END $$
DELIMITER ;

-- depoisInserirMarca
DROP TRIGGER IF EXISTS depoisInserirMarca;
DELIMITER $$
CREATE TRIGGER  depoisInserirMarca AFTER INSERT ON marca FOR EACH ROW
BEGIN
	INSERT INTO bkpmarca (IDMARCA,NOME,PRODUTOS,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (NEW.IDMARCA,NEW.NOME,NEW.PRODUTOS,NEW.DTINSERT,NEW.HRINSERT,NEW.DTUPDATE,NEW.HRUPDATE);
	
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("INSERT","marca",NEW.IDMARCA);	
END $$
DELIMITER ;

-- depoisAlterarMarca
DROP TRIGGER IF EXISTS depoisAlterarMarca;
DELIMITER $$
CREATE TRIGGER  depoisAlterarMarca AFTER UPDATE ON marca FOR EACH ROW
BEGIN
	INSERT INTO bkpmarca (IDMARCA,NOME,PRODUTOS,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (NEW.IDMARCA,NEW.NOME,NEW.PRODUTOS,NEW.DTINSERT,NEW.HRINSERT,NEW.DTUPDATE,NEW.HRUPDATE);
	
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("UPDATE","marca",NEW.IDMARCA);	
END $$
DELIMITER ;

-- depoisExcluirMarca
DROP TRIGGER IF EXISTS depoisExcluirMarca;
DELIMITER $$
CREATE TRIGGER  depoisExcluirMarca AFTER DELETE ON marca FOR EACH ROW
BEGIN
	INSERT INTO bkpmarca (IDMARCA,NOME,PRODUTOS,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (OLD.IDMARCA,OLD.NOME,OLD.PRODUTOS,OLD.DTINSERT,OLD.HRINSERT,OLD.DTUPDATE,OLD.HRUPDATE);
	
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("DELETE","marca",OLD.IDMARCA);	
END $$
DELIMITER ;


-- antesInserirBkpMarca
DROP TRIGGER IF EXISTS antesInserirBkpMarca;
DELIMITER $$
CREATE TRIGGER antesInserirBkpMarca BEFORE INSERT ON bkpmarca FOR EACH ROW
BEGIN
	SET NEW.DTBKP = CURRENT_DATE();
	SET NEW.HRBKP = CURRENT_TIME();

END $$
DELIMITER ;


-- antesInserirUnidade
DROP TRIGGER IF EXISTS antesInserirUnidade;
DELIMITER $$
CREATE TRIGGER  antesInserirUnidade BEFORE INSERT ON unidade FOR EACH ROW
BEGIN
	SET NEW.NOME =  UPPER(NEW.NOME);
	SET NEW.DTINSERT = CURRENT_DATE();
	SET NEW.HRINSERT = CURRENT_TIME();

END $$
DELIMITER ;

-- antesAlterarUnidade
DROP TRIGGER IF EXISTS antesAlterarUnidade;
DELIMITER $$
CREATE TRIGGER  antesAlterarUnidade BEFORE UPDATE ON unidade FOR EACH ROW
BEGIN
	SET NEW.NOME =  UPPER(NEW.NOME);
	SET NEW.DTUPDATE = CURRENT_DATE();
	SET NEW.HRUPDATE = CURRENT_TIME();

END $$
DELIMITER ;

-- depoisInserirUnidade
DROP TRIGGER IF EXISTS depoisInserirUnidade;
DELIMITER $$
CREATE TRIGGER  depoisInserirUnidade AFTER INSERT ON unidade FOR EACH ROW
BEGIN
	INSERT INTO bkpunidade (IDUNIDADE,NOME,PRODUTOS,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (NEW.IDUNIDADE,NEW.NOME,NEW.PRODUTOS,NEW.DTINSERT,NEW.HRINSERT,NEW.DTUPDATE,NEW.HRUPDATE);
	
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("INSERT","unidade",NEW.IDUNIDADE);	
END $$
DELIMITER ;

-- depoisAlterarUnidade
DROP TRIGGER IF EXISTS depoisAlterarUnidade;
DELIMITER $$
CREATE TRIGGER  depoisAlterarUnidade AFTER UPDATE ON unidade FOR EACH ROW
BEGIN
	INSERT INTO bkpunidade (IDUNIDADE,NOME,PRODUTOS,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (NEW.IDUNIDADE,NEW.NOME,NEW.PRODUTOS,NEW.DTINSERT,NEW.HRINSERT,NEW.DTUPDATE,NEW.HRUPDATE);
	
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("UPDATE","unidade",NEW.IDUNIDADE);	
END $$
DELIMITER ;

-- depoisExcluirUnidade
DROP TRIGGER IF EXISTS depoisExcluirUnidade;
DELIMITER $$
CREATE TRIGGER  depoisExcluirUnidade AFTER DELETE ON unidade FOR EACH ROW
BEGIN
	INSERT INTO bkpunidade (IDUNIDADE,NOME,PRODUTOS,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (OLD.IDUNIDADE,OLD.NOME,OLD.PRODUTOS,OLD.DTINSERT,OLD.HRINSERT,OLD.DTUPDATE,OLD.HRUPDATE);
	
	INSERT INTO historico (ACAO,TABELA,ID) VALUES ("DELETE","unidade",OLD.IDUNIDADE);	
END $$
DELIMITER ;


-- antesInserirBkpUnidade
DROP TRIGGER IF EXISTS antesInserirBkpUnidade;
DELIMITER $$
CREATE TRIGGER antesInserirBkpUnidade BEFORE INSERT ON bkpunidade FOR EACH ROW
BEGIN
	SET NEW.DTBKP = CURRENT_DATE();
	SET NEW.HRBKP = CURRENT_TIME();

END $$
DELIMITER ;


-- antesInserirCidade
DROP TRIGGER IF EXISTS antesInserirCidade;
DELIMITER $$
CREATE TRIGGER antesInserirCidade BEFORE INSERT ON cidade FOR EACH ROW
BEGIN
	SET NEW.NOME = UPPER(NEW.NOME);
	SET NEW.DTINSERT = CURRENT_DATE();
	SET NEW.HRINSERT = CURRENT_TIME();	
END $$
DELIMITER ;

-- antesAlterarCidade
DROP TRIGGER IF EXISTS antesAlterarCidade;
DELIMITER $$
CREATE TRIGGER antesAlterarCidade BEFORE UPDATE ON cidade FOR EACH ROW
BEGIN
	SET NEW.NOME = UPPER(NEW.NOME);
	SET NEW.DTUPDATE = CURRENT_DATE();
	SET NEW.HRUPDATE = CURRENT_TIME();	
END $$
DELIMITER ;


-- antesExcluirCidade (não tem instruções)
DROP TRIGGER IF EXISTS antesExcluirCidade;
DELIMITER $$
CREATE TRIGGER antesExcluirCidade BEFORE DELETE ON cidade FOR EACH ROW
BEGIN
	
END $$
DELIMITER ;

-- depoisInserirCidade
DROP TRIGGER IF EXISTS depoisInserirCidade;
DELIMITER $$
CREATE TRIGGER depoisInserirCidade AFTER INSERT ON cidade FOR EACH ROW
BEGIN
	-- Alimentar a tabela bkpcidade
	INSERT INTO bkpcidade(IDCIDADE,NOME,IDESTADO,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (NEW.IDCIDADE,NEW.NOME,NEW.IDESTADO,NEW.DTINSERT,NEW.HRINSERT,NEW.DTUPDATE,NEW.HRUPDATE);
	
	-- Alimentar a tabela historio
	INSERT INTO historico (ACAO,TABELA,ID) VALUE ('INSERT','cidade',NEW.IDCIDADE);

	-- Calcular e atualizar o número de CIDADES do estado
	CALL calcularCidades(NEW.IDESTADO);
	
END $$
DELIMITER ;

-- depoisAlterarCidade
DROP TRIGGER IF EXISTS depoisAlterarCidade;
DELIMITER $$
CREATE TRIGGER depoisAlterarCidade AFTER UPDATE ON cidade FOR EACH ROW
BEGIN
	-- Alimentar a tabela bkpcidade
	INSERT INTO bkpcidade(IDCIDADE,NOME,IDESTADO,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (NEW.IDCIDADE,NEW.NOME,NEW.IDESTADO,NEW.DTINSERT,NEW.HRINSERT,NEW.DTUPDATE,NEW.HRUPDATE);
	
	-- Alimentar a tabela historio
	INSERT INTO historico (ACAO,TABELA,ID) VALUE ('UPDATE','cidade',NEW.IDCIDADE);

	-- Calcular e atualizar o número de CIDADES do estado
	IF(NEW.IDESTADO<>OLD.IDESTADO) THEN
		CALL calcularCidades(NEW.IDESTADO);
		CALL calcularCidades(OLD.IDESTADO);
	END IF;
	
END $$
DELIMITER ;

-- depoisExcluirCidade
DROP TRIGGER IF EXISTS depoisExcluirCidade;
DELIMITER $$
CREATE TRIGGER depoisExcluirCidade AFTER DELETE ON cidade FOR EACH ROW
BEGIN
	-- Alimentar a tabela bkpcidade
	INSERT INTO bkpcidade(IDCIDADE,NOME,IDESTADO,DTINSERT,HRINSERT,DTUPDATE,HRUPDATE)
	VALUES (OLD.IDCIDADE,OLD.NOME,OLD.IDESTADO,OLD.DTINSERT,OLD.HRINSERT,OLD.DTUPDATE,OLD.HRUPDATE);
	
	-- Alimentar a tabela historio
	INSERT INTO historico (ACAO,TABELA,ID) VALUE ('DELETE','cidade',OLD.IDCIDADE);

	-- Calcular e atualizar o número de CIDADES do estado
	CALL calcularCidades(OLD.IDESTADO);	
	
END $$
DELIMITER ;

-- antesInserirBkpCidade
DROP TRIGGER IF EXISTS antesInserirBkpCidade;
DELIMITER $$
CREATE TRIGGER antesInserirBkpCidade BEFORE INSERT ON bkpcidade FOR EACH ROW
BEGIN
	SET NEW.DTBKP = CURRENT_DATE();
	SET NEW.HRBKP = CURRENT_TIME();
END $$
DELIMITER ;

 -- antesInserirProduto
DROP TRIGGER IF EXISTS antesInserirProduto;
DELIMITER $$
CREATE TRIGGER antesInserirProduto BEFORE INSERT ON produto FOR EACH ROW
BEGIN
	SET NEW.NOME = UPPER(NEW.NOME);
	SET NEW.PRECOVENDA = ROUND(NEW.PRECOCOMPRA*(1+NEW.MARGEMLUCRO/100),2);
	SET NEW.DTINSERT = CURRENT_DATE();
	SET NEW.HRINSERT = CURRENT_TIME();	
END $$
DELIMITER ;

-- antesAlterarProduto
DROP TRIGGER IF EXISTS antesAlterarProduto;
DELIMITER $$
CREATE TRIGGER antesAlterarProduto BEFORE UPDATE ON produto FOR EACH ROW
BEGIN
	SET NEW.NOME = UPPER(NEW.NOME);
	SET NEW.PRECOVENDA = ROUND(NEW.PRECOCOMPRA*(1+NEW.MARGEMLUCRO/100),2);
	SET NEW.ESTOQUE = NEW.COMPRADOS-NEW.VENDIDOS;
	SET NEW.DTUPDATE = CURRENT_DATE();
	SET NEW.HRUPDATE = CURRENT_TIME();	
END $$
DELIMITER ;


-- antesExcluirProduto (não tem instruções)
DROP TRIGGER IF EXISTS antesExcluirProduto;
DELIMITER $$
CREATE TRIGGER antesExcluirProduto BEFORE DELETE ON produto FOR EACH ROW
BEGIN
	
END $$
DELIMITER ;

-- depoisInserirProduto
DROP TRIGGER IF EXISTS depoisInserirProduto;
DELIMITER $$
CREATE TRIGGER depoisInserirProduto AFTER INSERT ON produto FOR EACH ROW
BEGIN
	-- Alimentar a tabela bkpproduto
	INSERT INTO bkpproduto (IDPRODUTO,
				NOME,
				PRECOCOMPRA,
				MARGEMLUCRO,
				PRECOVENDA,
				IDMARCA,
				IDUNIDADE,
				ESTOQUE,
				DTINSERT,
				HRINSERT,
				DTUPDATE,
				HRUPDATE)
	VALUES (NEW.IDPRODUTO,
			NEW.NOME,
			NEW.PRECOCOMPRA,
			NEW.MARGEMLUCRO,
			NEW.PRECOVENDA,
			NEW.IDMARCA,
			NEW.IDUNIDADE,
			NEW.ESTOQUE,
			NEW.DTINSERT,
			NEW.HRINSERT,
			NEW.DTUPDATE,
			NEW.HRUPDATE);
	
	-- Alimentar a tabela historio
	INSERT INTO historico (ACAO,TABELA,ID) VALUE ('INSERT','produto',NEW.IDPRODUTO);

	-- Calcular e atualizar o número de PRODUTOS da marca
	CALL calcularProdutosMarca(NEW.IDMARCA);
	
	-- Calcular e atualizar o número de PRODUTOS da unidade
	CALL calcularProdutosUnidade(NEW.IDUNIDADE);	
	
END $$
DELIMITER ;

-- depoisAlterarProduto
DROP TRIGGER IF EXISTS depoisAlterarProduto;
DELIMITER $$
CREATE TRIGGER depoisAlterarProduto AFTER UPDATE ON produto FOR EACH ROW
BEGIN
	-- Alimentar a tabela bkpproduto
	INSERT INTO bkpproduto (IDPRODUTO,
				NOME,
				PRECOCOMPRA,
				MARGEMLUCRO,
				PRECOVENDA,
				IDMARCA,
				IDUNIDADE,
				ESTOQUE,
				DTINSERT,
				HRINSERT,
				DTUPDATE,
				HRUPDATE)
	VALUES (NEW.IDPRODUTO,
			NEW.NOME,
			NEW.PRECOCOMPRA,
			NEW.MARGEMLUCRO,
			NEW.PRECOVENDA,
			NEW.IDMARCA,
			NEW.IDUNIDADE,
			NEW.ESTOQUE,
			NEW.DTINSERT,
			NEW.HRINSERT,
			NEW.DTUPDATE,
			NEW.HRUPDATE);
	
	-- Alimentar a tabela historio
	INSERT INTO historico (ACAO,TABELA,ID) VALUE ('UPDATE','produto',NEW.IDPRODUTO);

	-- Calcular e atualizar o número de PRODUTOS da marca
	IF(NEW.IDPRODUTO<>OLD.IDPRODUTO) THEN
		CALL calcularProdutosMarca(NEW.IDMARCA);
		CALL calcularProdutosMarca(OLD.IDMARCA);
	END IF;
	
	-- Calcular e atualizar o número de PRODUTOS da unidade
	IF(NEW.IDPRODUTO<>OLD.IDPRODUTO) THEN
		CALL calcularProdutosUnidade(NEW.IDUNIDADE);
		CALL calcularProdutosUnidade(OLD.IDUNIDADE);
	END IF;	
	
END $$
DELIMITER ;

-- depoisExcluirProduto
DROP TRIGGER IF EXISTS depoisExcluirProduto;
DELIMITER $$
CREATE TRIGGER depoisExcluirProduto AFTER DELETE ON produto FOR EACH ROW
BEGIN
	-- Alimentar a tabela bkpproduto
	INSERT INTO bkpproduto (IDPRODUTO,
				NOME,
				PRECOCOMPRA,
				MARGEMLUCRO,
				PRECOVENDA,
				IDMARCA,
				IDUNIDADE,
				ESTOQUE,
				DTINSERT,
				HRINSERT,
				DTUPDATE,
				HRUPDATE)
	VALUES (OLD.IDPRODUTO,
			OLD.NOME,
			OLD.PRECOCOMPRA,
			OLD.MARGEMLUCRO,
			OLD.PRECOVENDA,
			OLD.IDMARCA,
			OLD.IDUNIDADE,
			OLD.ESTOQUE,
			OLD.DTINSERT,
			OLD.HRINSERT,
			OLD.DTUPDATE,
			OLD.HRUPDATE);
	
	-- Alimentar a tabela historio
	INSERT INTO historico (ACAO,TABELA,ID) VALUE ('DELETE','produto',OLD.IDPRODUTO);

	-- Calcular e atualizar o número de PRODUTOS da marca
	CALL calcularProdutosMarca(OLD.IDMARCA);
	
	-- Calcular e atualizar o número de PRODUTOS da unidade
	CALL calcularProdutosUnidade(OLD.IDUNIDADE);	
	
END $$
DELIMITER ;

-- antesInserirBkpProduto
DROP TRIGGER IF EXISTS antesInserirBkpProduto;
DELIMITER $$
CREATE TRIGGER antesInserirBkpProduto BEFORE INSERT ON bkpproduto FOR EACH ROW
BEGIN
	SET NEW.DTBKP = CURRENT_DATE();
	SET NEW.HRBKP = CURRENT_TIME();
END $$
DELIMITER ;



